from config import BOT_TOKEN
from ScheduleParser import ScheduleParser
import keyboards as kb

from time import sleep
import json
import re
import string

from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message


bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

users_chat_id: dict = {}


# –ö–æ–º–∞–Ω–¥–∞ "/start"
@dp.message(Command(commands=["start"]))
async def process_start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç ScheduleBot!\n–Ø –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!")
    await message.answer("–î–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –º–Ω–æ–π, –≤–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –§–ò–û\n–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á")

    global users_chat_id
    users_chat_id.setdefault(message.chat.id, tuple())


# –ú–µ–Ω—é "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
@dp.message(F.text == "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
async def send_schedule(message: Message):
    global users_chat_id

    msg = await message.answer("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...")

    schedule = await users_chat_id[message.chat.id][1].week_schedule

    await msg.edit_text(schedule[0])
    del schedule[0]

    for text in schedule:
        await message.answer(text)


# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ –§–ò–û
@dp.message()
async def authorisation(message: Message):
    global users_chat_id

    if users_chat_id[message.chat.id]:
        await message.answer(f"–í—ã —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –ø–æ–¥ –∏–º–µ–Ω–µ–º: {users_chat_id[message.chat.id][0]}")
        return

    if not re.fullmatch(r"[–ê-–Ø–Å–∞-—è—ë]+/s[–ê-–Ø–Å–∞-—è—ë]+/s[–ê-–Ø–Å–∞-—è—ë]+", message.text):
        '''
        –í—Å–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è —Å—Ä–∞–∑—É –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –Ω–µ–∫–æ–≥–¥–∞ –∏–º—è –ë–û–ß —Ä–í–§ 260602
        (–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –û–±—ä–µ–∫—Ç –ß–µ–ª–æ–≤–µ–∫ —Ä–æ–¥–∞ –í–æ—Ä–æ–Ω–∏–Ω—ã—Ö-–ü–∞—Ä—Ö–æ–º–µ–Ω–∫–æ, —Ä–æ–¥–∏–≤—à–∏–π—Å—è 26.06.2002 –≥–æ–¥–∞).
        - –ê–ª–µ–∫—Å–µ–π –®–∏–º–∞–Ω—Å–∫–∏–π Commented7 –∏—é–ª. 2017 –≤ 6:33
        '''
        pass

    if len(message.text.split()) < 3 or len(message.text) > 100 or any(map(lambda x: x in string.ascii_letters, message.text)):
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –§–ò–û!")
    else:
        await message.answer("–ü–æ–¥–∫–ª—é—á–∞—é –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ...")
        users_chat_id[message.chat.id] = (message.text, await ScheduleParser(message.text).driver)
        await message.answer("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!", reply_markup=kb.StartMenu)


if __name__ == "__main__":
    dp.run_polling(bot)
